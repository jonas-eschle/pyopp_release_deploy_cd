name: Publish Conda Package

# Publishes conda packages to anaconda.org
# Educational example of conda CD pipeline with the latest tools

on:
  push:
  workflow_dispatch:

env:
  PACKAGE_NAME: ${{ github.event.inputs.package_name || 'hello_numpy' }}

jobs:
  build-and-publish:
    name: Build and publish conda package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.10', '3.11', '3.12' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          miniforge-variant: Miniforge3
          activate-environment: build
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: strict
          show-channel-urls: true
          use-only-tar-bz2: false  # Allow .conda files (newer format)

      - name: Install build dependencies
        shell: bash -l {0}
        run: |
          # Install latest conda-build, boa (mamba-based builder), and anaconda-client
          mamba install -y conda-build boa anaconda-client conda-verify grayskull


      - name: Prepare package source
        shell: bash -l {0}
        run: |
          # Create source distribution if it doesn't exist
          cd packages/${{ env.PACKAGE_NAME }}
          pipx run build --sdist
          
          # Copy to conda build directory
          cp -r . ../../managers/conda/${{ env.PACKAGE_NAME }}/

      - name: Update meta.yaml with correct paths
        shell: bash -l {0}
        working-directory: ./managers/conda
        run: |
          # Update source path in meta.yaml to use the package directory
          cd ${{ env.PACKAGE_NAME }}
          
          # Update the source path to use local directory
          sed -i.bak 's|url:.*|path: .|g' meta.yaml || true
          
          # Remove sha256 for local builds
          sed -i.bak '/sha256:/d' meta.yaml || true

      - name: Build conda package with mamba
        shell: bash -l {0}
        working-directory: ./managers/conda/${{ env.PACKAGE_NAME }}
        run: |
          # Build using conda-mambabuild (faster)
          conda mambabuild . -c conda-forge --output-folder ../dist --no-anaconda-upload
          
          # List built packages
          echo "Built packages:"
          find ../dist -name "*.tar.bz2" -o -name "*.conda" | sort

      - name: Test conda package locally
        shell: bash -l {0}
        working-directory: ./managers/conda
        run: |
          # Create test environment
          conda create -n test-env python=${{ matrix.python-version }} -y
          conda activate test-env
          
          # Install from local build
          conda install -c ./dist -c conda-forge ${{ env.PACKAGE_NAME }} -y
          
          # Test imports and functionality
          python -c "import ${{ env.PACKAGE_NAME }}; print('âœ… Package imported successfully')"
          
          # Test CLI if it exists
          if command -v hello_numpy &> /dev/null; then
            hello_numpy --help
            hello_numpy --size 5 --seed 42
          fi

      - name: Upload to anaconda.org  # HACK below, don't use, it's a tutorial
        if: false && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        shell: bash -l {0}
        working-directory: ./managers/conda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          # Use token-based authentication (recommended)
          anaconda login --token $ANACONDA_API_TOKEN
          
          # Upload packages with labels
          for pkg in dist/*/*.tar.bz2 dist/*/*.conda; do
            if [ -f "$pkg" ]; then
              anaconda upload "$pkg" \
                --user ${{ secrets.ANACONDA_USERNAME || 'your-channel' }} \
                --label main \
                --label ${{ matrix.python-version }} \
                --skip-existing
            fi
          done
          
          # Logout
          anaconda logout

